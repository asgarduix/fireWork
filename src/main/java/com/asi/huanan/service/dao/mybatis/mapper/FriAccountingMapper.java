package com.asi.huanan.service.dao.mybatis.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;

import com.asi.huanan.service.dao.mybatis.model.FriAccounting;
import com.asi.huanan.service.dao.mybatis.model.FriAccountingExample;
import com.asi.huanan.service.dao.mybatis.model.FriAccountingKey;

public interface FriAccountingMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    long countByExample(FriAccountingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    int deleteByExample(FriAccountingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    int deleteByPrimaryKey(FriAccountingKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    int insert(FriAccounting record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    int insertSelective(FriAccounting record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    List<FriAccounting> selectByExample(FriAccountingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    FriAccounting selectByPrimaryKey(FriAccountingKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    int updateByExampleSelective(@Param("record") FriAccounting record, @Param("example") FriAccountingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    int updateByExample(@Param("record") FriAccounting record, @Param("example") FriAccountingExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    int updateByPrimaryKeySelective(FriAccounting record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_accounting
     *
     * @mbg.generated Wed Dec 01 10:33:52 CST 2021
     */
    int updateByPrimaryKey(FriAccounting record);
    
    @Select("<script>SELECT broker_id as brokerId "
    		+ "FROM fri_accounting "
    		+ "WHERE bill_no = #{slipNo} "
    		+ "AND amend_seq = (SELECT max(amend_seq) from fri_accounting  WHERE bill_no = #{slipNo} ) " 
    		+ "AND broker_id Not IN (SELECT rin_com_id FROM fri_fac_rincom WHERE slip_no = #{slipNo} )</script>")
    List<FriAccounting> queryForRin1303No1(@Param("slipNo") String slipNo);
    
    
    @Select("<script>Select amend_seq as amendSeq , isnull(Amend_flag,'') as amendFlag "
    		+ "from fri_accounting "
    		+ "WHERE bill_no= #{slipNo} "
    		+ "and Broker_id= #{brokerId} "
    		+ "order by amend_seq DESC </script>")
    List<FriAccounting> queryForRin1303No2(@Param("slipNo") String slipNo, @Param("brokerId") String brokerId);
    
    @Delete("<script>Delete from fri_accounting "
    		+ "where bill_no = #{slipNo} "
    		+ "and amend_seq =  #{amendSeq} "
    		+ "and broker_id = #{brokerId} </script>")
    void deleteForRin1303(@Param("slipNo") String slipNo, @Param("amendSeq") Short amendSeq, @Param("brokerId") String brokerId);
    
    @ResultMap("com.asi.huanan.service.dao.mybatis.mapper.FriAccountingMapper.BaseResultMap")
    @Select("<script>"
    		+ " SELECT TOP 1 *  "
    		+ " FROM fri_accounting "
    		+ " WHERE bill_no= #{slipNo} "
    		+ " AND AMEND_SEQ = "
    		+ " (SELECT MAX(AMEND_SEQ) FROM fri_accounting "
    		+ " WHERE bill_no=#{slipNo} "
    		+ " AND close_date IS NOT NULL AND close_date != '' ) "
    		+ "</script>")
    List<FriAccounting> queryForRin1303No4(@Param("slipNo") String slipNo);
    
    @Delete({"<script>Delete from fri_accounting "
    		,"where bill_no = #{slipNo} "
    		,"and amend_seq = ( select Max(amend_seq) from fri_accounting where bill_no = #{slipNo}) "
    		," and ((close_date is null) or (close_date = '1900/01/01') ) "
    		," and ( turn_flag = 'Y' or turn_flag = 'N' or turn_flag = 'D' ) </script>"})
    int deleteChangeStatusRin1303(@Param("slipNo") String slipNo);
    
}