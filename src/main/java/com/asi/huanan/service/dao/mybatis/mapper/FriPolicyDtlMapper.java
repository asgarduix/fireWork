package com.asi.huanan.service.dao.mybatis.mapper;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import com.asi.huanan.service.dao.mybatis.model.FriPolicyDtl;
import com.asi.huanan.service.dao.mybatis.model.FriPolicyDtlExample;
import com.asi.huanan.service.dao.mybatis.model.FriPolicyDtlKey;
import com.asi.huanan.vo.R1304QueryPolicyDtlVO;
import com.asi.huanan.vo.Rin1203AVOResp;
import com.asi.huanan.vo.Rin1304FriPolicyDtlVOResp;
import com.asi.huanan.vo.Rin1304GetAddrNoVO;
import com.asi.huanan.vo.Rin1304GetUsePropVO;
import com.asi.huanan.vo.Rin1304VO;



public interface FriPolicyDtlMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    long countByExample(FriPolicyDtlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    int deleteByExample(FriPolicyDtlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    int deleteByPrimaryKey(FriPolicyDtlKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    int insert(FriPolicyDtl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    int insertSelective(FriPolicyDtl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    List<FriPolicyDtl> selectByExample(FriPolicyDtlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    FriPolicyDtl selectByPrimaryKey(FriPolicyDtlKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    int updateByExampleSelective(@Param("record") FriPolicyDtl record, @Param("example") FriPolicyDtlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    int updateByExample(@Param("record") FriPolicyDtl record, @Param("example") FriPolicyDtlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    int updateByPrimaryKeySelective(FriPolicyDtl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fri_policy_dtl
     *
     * @mbg.generated Tue Nov 09 10:42:31 CST 2021
     */
    int updateByPrimaryKey(FriPolicyDtl record);
    
   
    /**
     * Rin1203_同險設定，更正地段
     * @param areaCode
     * @param policyNo
     * @param endorseNo
     * @param addrNo
     * @return
     */

//    @Update("<script>"+
//    		"update fri_policy_dtl set area_code = #{areaCode,jdbcType=VARCHAR} \n"+
//    		"where policy_no = #{policyNo,jdbcType=VARCHAR} \n"+
//    		" and endorse_no = #{endorseNo,jdbcType=VARCHAR} \n"+
//    		" and addr_no = #{addrNo,jdbcType=SMALLINT} \n"+
//            "</script>")
    @Update("<script> update fri_policy_dtl set area_code = #{areaCode,jdbcType=VARCHAR} \n where policy_no = #{policyNo,jdbcType=VARCHAR} \n and endorse_no = #{endorseNo,jdbcType=VARCHAR} \n and addr_no = #{addrNo,jdbcType=SMALLINT} \n </script>")
    int updateAreaCode (@Param("areaCode") String areaCode,@Param("policyNo") String policyNo,@Param("endorseNo") String endorseNo,@Param("addrNo") Integer addrNo );

    
  
    /**
     * Rin1203_同險設定，更正地址
     * @param propAddr
     * @param policyNo
     * @param endorseNo
     * @param addrNo
     * @return
     */
//    @Update("<script>"+
//    		"update fri_policy_dtl set \n"+
//    		"prop_addr = #{propAddr,jdbcType=VARCHAR} \n"+
//    		"where policy_no = #{policyNo,jdbcType=VARCHAR}  \n"+
//    		"and endorse_no = #{endorseNo,jdbcType=VARCHAR}  \n"+
//    		"and addr_no = #{addrNo,jdbcType=SMALLINT} \n "+
//            "</script>")
    @Update("<script> update fri_policy_dtl set \n prop_addr = #{propAddr,jdbcType=VARCHAR} \n where policy_no = #{policyNo,jdbcType=VARCHAR}  \n and endorse_no = #{endorseNo,jdbcType=VARCHAR}  \n and addr_no = #{addrNo,jdbcType=SMALLINT} \n </script>")
    int updateAddress (@Param("propAddr") String propAddr,@Param("policyNo") String policyNo,@Param("endorseNo") String endorseNo,@Param("addrNo") Integer addrNo );

    
   
    /**
     * Rin1203_同險設定，更正同險號
     * @param riskNo
     * @param riskName
     * @param policyNo
     * @param endorseNo
     * @param addrNo
     * @return
     */

//    @Update("<script>"+
//    		"update fri_policy_dtl set \n"+
//    		"risk_no = #{riskNo,jdbcType=VARCHAR},\n"+
//    		"risk_name =#{riskName,jdbcType=VARCHAR},\n"+
//    		"risk_flag = 'Y'  \n"+
//    		"where policy_no = #{policyNo,jdbcType=VARCHAR}\n"+
//    		"and endorse_no = #{endorseNo,jdbcType=VARCHAR}\n"+
//    	    "and addr_no = #{addrNo,jdbcType=SMALLINT} \n"+
//            "</script>")
    @Update("<script> update fri_policy_dtl set \n risk_no = #{riskNo,jdbcType=VARCHAR},\n risk_name =#{riskName,jdbcType=VARCHAR},\n risk_flag = 'Y' \n where policy_no = #{policyNo,jdbcType=VARCHAR}\n and endorse_no = #{endorseNo,jdbcType=VARCHAR}\n and addr_no = #{addrNo,jdbcType=SMALLINT} \n </script>")
	int updateRiskNo(@Param("riskNo")String riskNo, @Param("riskName")String riskName, @Param("policyNo")String policyNo, @Param("endorseNo")String endorseNo, @Param("addrNo")Integer addrNo);


   
    /**
     * Rin1203_同險設定，確認同險按鈕，勾選多筆
     * @param record
     * @param riskNo
     * @param riskName
     * @return
     */

//    @Update("<script>"+
//    		"<foreach collection =\"record\" item = \"item\" index=\"index\" separator=\";\">"+
//    		"update fri_policy_dtl set \n"+
//    		"risk_no = #{riskNo,jdbcType=VARCHAR},\n"+
//    		"risk_name = #{riskName,jdbcType=VARCHAR},\n"+
//    		"risk_flag = 'Y'  \n"+
//    		"where policy_no = #{item.txtpolicy_no,jdbcType=VARCHAR}\n"+
//    		"and endorse_no =  #{item.txtendorse_no,jdbcType=VARCHAR}\n"+
//    	    "and addr_no =  #{item.numaddr_no,jdbcType=SMALLINT} \n"+
//    	    "</foreach>" + 
//    		"</script>")
    @Update("<script> <foreach collection =\"record\" item = \"item\" index=\"index\" separator=\";\"> update fri_policy_dtl set \n risk_no = #{riskNo,jdbcType=VARCHAR},\n risk_name = #{riskName,jdbcType=VARCHAR},\n risk_flag = 'Y' \n where policy_no = #{item.txtpolicy_no,jdbcType=VARCHAR}\n and endorse_no =  #{item.txtendorse_no,jdbcType=VARCHAR}\n and addr_no =  #{item.numaddr_no,jdbcType=SMALLINT} \n </foreach> </script>")
    int updatePolicyDelList(@Param("record") List<Rin1203AVOResp> record, @Param("riskNo") String riskNo, @Param("riskName") String riskName);
    
    
    /**
     * Rin1203_同險設定，更改舊同險號
     * @param riskNo
     * @param riskName
     * @param policyNo
     * @param endorseNo
     * @param propAddr
     * @return
     */

//    @Update("<script>"
//    		+"update fri_policy_dtl set \n"
//    		+"risk_no = #{riskNo,jdbcType=VARCHAR}, \n"
//    		+"risk_name = #{riskName,jdbcType=VARCHAR},\n"
//    		+"risk_flag = 'Y' \n"  
//    		+"where policy_no = #{policyNo,jdbcType=VARCHAR} \n"
//    		+"and endorse_no = #{endorseNo,jdbcType=VARCHAR}\n"
//    	    +"and prop_addr = #{propAddr,jdbcType=VARCHAR} \n"
//    		+"</script>")
    @Update("<script> update fri_policy_dtl set \n risk_no = #{riskNo,jdbcType=VARCHAR}, \n risk_name = #{riskName,jdbcType=VARCHAR},\n risk_flag = 'Y' \n where policy_no = #{policyNo,jdbcType=VARCHAR} \n and endorse_no = #{endorseNo,jdbcType=VARCHAR}\n and prop_addr = #{propAddr,jdbcType=VARCHAR} \n </script>")

    int updateOldRiskNo(@Param("riskNo")String riskNo, @Param("riskName")String riskName, @Param("policyNo")String policyNo, @Param("endorseNo")String endorseNo, @Param("propAddr")String propAddr);

    
//    /**
//     * Rin1304_臨分分入，確認查詢，用「保單號碼」和「批單號碼」查詢第1層
//     * @param policyNo
//     * @param endorseNo
//     * @return
//     */
//    @Select("<script>"
//    		+" Select Addr_No,prop_addr, \n"
//    		+" (Select TOP 1 acct_flag from fri_treaty_shares fts\n"
//    		+" where fts.policy_no=fpd.policy_no \n"  
//    		+" and fts.endorse_no=fpd.endorse_no \n"  
//    		+" and fts.addr_no=fpd.addr_no \n"  
//    		+" and fts.risk_no=fpd.risk_no \n"  
//    		+" and fts.acct_flag='Y' ) as acct_flag \n"
//    		+" from fri_policy_dtl fpd "
//    		+ "WHERE policy_no= #{txtpolicy_no_query,jdbcType=VARCHAR}\n"  
//    		+" AND endorse_no= #{txtendorse_no_query,jdbcType=VARCHAR}"
//    		+"</script>")
//    List<Rin1304VOResp> getPolicyTreeData1 (@Param("txtpolicy_no_query") String policyNo,@Param("txtendorse_no_query") String endorseNo);
    
    
    /**
     * Rin1304_臨分分入，用「保單號碼」和「批單號碼」刪除保批單明細檔
     * @param policyNo
     * @param endorseNo
     * @return
     */

//    @Delete("<script>"
//    		+"delete from  fri_policy_dtl \n"   
//    		+"WHERE  policy_no = #{policyNo,jdbcType=VARCHAR} \n"
//    		+"AND endorse_no = #{endorseNo,jdbcType=VARCHAR} \n"
//    		+"<if test=\"addrNo !=null and addrNo !=''\">AND addr_no = #{addrNo,jdbcType=VARCHAR} </if>"
//    		+"</script>")
    @Delete("<script> delete from  fri_policy_dtl \n WHERE  policy_no = #{policyNo,jdbcType=VARCHAR} \n AND endorse_no = #{endorseNo,jdbcType=VARCHAR} \n <if test=\"addrNo !=null and addrNo !=''\">AND addr_no = #{addrNo,jdbcType=VARCHAR} </if> </script>")

    int deletePolicyDtl (@Param("policyNo") String policyNo,@Param("endorseNo") String endorseNo,@Param("addrNo") String addrNo);

    
    /**
     *  Rin1304_臨分分入,用「保單號碼」和「批單號碼」查詢保批單明細檔
     * @param policyNo
     * @param endorseNo
     * @return
     */

//    @Select("<script>"
//    		+"select policy_no as txtpolicy_no,endorse_no as txtendorse_no ,addr_no as numaddr_no \n"
//    		+"from fri_policy_dtl \n"
//    		+"WHERE policy_no=#{policyNo,jdbcType=VARCHAR} \n"
//    		+"AND  endorse_no=#{endorseNo,jdbcType=VARCHAR}"
//    		+"</script>")
    @Select("<script> select policy_no as policyNo,endorse_no as endorseNo ,addr_no as numaddr_no \n from fri_policy_dtl \n WHERE policy_no=#{policyNo,jdbcType=VARCHAR} \n AND  endorse_no=#{endorseNo,jdbcType=VARCHAR} </script>")

    List<Rin1304VO> queryPolicyDtl(@Param("policyNo")String policyNo,@Param("endorseNo") String endorseNo);

    
    /**
     *  Rin1304_臨分分入,用「保單號碼」和「批單號碼」和「地址序號」 查詢保批單明細檔
     * @param policyNo
     * @param endorseNo
     * @return
     */

//    @Select("<script>"
//    		+"SELECT policy_no as txtpolicy_no ,endorse_no as txtendorse_no, addr_no as numaddr_no, addr_no_ori as numaddr_no_ori,risk_no as txtrisk_no, \n"
//    		+"risk_flag as txtrisk_flag, risk_name as txtrisk_name ,policy_dbgn as txtpolicy_dbgn ,policy_dend as txtpolicy_dend,\n"
//    		+"prop_addr as txtprop_addr,zip_code as txtzip_code ,area_code as txtarea_code ,useprop_code as txtuseprop_code,\n"
//    		+"useprop_name as txtuseprop_name,Flor_no as numFlor_no ,const_class as txtconst_class,limit_no,limit ,\n"
//    		+"limit_rate as txtlimit_rate ,limit_ori as numlimit_ori,amt as numamt ,prem as numprem ,amt_flt as numamt_flt,\n"
//    		+"prem_flt as numprem_flt,amt_fix as numamt_fix ,prem_fix as numprem_fix,amt_typ as numamt_typ,prem_typ as numprem_typ,\n"
//    		+"amt_ear as numamt_ear,prem_ear as numprem_ear ,mercno as txtmercno \n"
//    		+"from fri_policy_dtl \n"
//    		+ "WHERE 1 = 1 "  
//			+ " AND policy_no =#{policyNo,jdbcType=VARCHAR}  "
//			+" AND endorse_no = #{endorseNo,jdbcType=VARCHAR} "  
//    		+"AND addr_no=#{addrNo,jdbcType=VARCHAR} \n"
//    		+"group by policy_no ,endorse_no ,addr_no,addr_no_ori,risk_no ,risk_flag , risk_name ,policy_dbgn  ,policy_dend ,\n"
//    		+"prop_addr ,zip_code ,area_code ,useprop_code,useprop_name ,Flor_no ,const_class,limit_no,limit ,\n"
//    		+"limit_rate ,limit_ori ,amt ,prem ,amt_flt ,prem_flt ,amt_fix ,prem_fix,amt_typ ,prem_typ,\n"
//    		+"amt_ear ,prem_ear,mercno"
//    		+"</script>")
    @Select("<script> SELECT policy_no as txtpolicy_no ,endorse_no as txtendorse_no, addr_no as numaddr_no, addr_no_ori as numaddr_no_ori,risk_no as txtrisk_no, \n risk_flag as txtrisk_flag, risk_name as txtrisk_name ,policy_dbgn as txtpolicy_dbgn ,policy_dend as txtpolicy_dend,\n prop_addr as txtprop_addr,zip_code as txtzip_code ,area_code as txtarea_code ,useprop_code as txtuseprop_code,\n useprop_name as txtuseprop_name,Flor_no as numFlor_no ,const_class as txtconst_class,limit_no,limit ,\n limit_rate as txtlimit_rate ,limit_ori as numlimit_ori,amt as numamt ,prem as numprem ,amt_flt as numamt_flt,\n prem_flt as numprem_flt,amt_fix as numamt_fix ,prem_fix as numprem_fix,amt_typ as numamt_typ,prem_typ as numprem_typ,\n amt_ear as numamt_ear,prem_ear as numprem_ear ,mercno as txtmercno \n from fri_policy_dtl \n WHERE 1 = 1  AND policy_no =#{policyNo,jdbcType=VARCHAR}  AND endorse_no = #{endorseNo,jdbcType=VARCHAR} \n AND addr_no=#{addrNo,jdbcType=VARCHAR} \n group by policy_no ,endorse_no ,addr_no,addr_no_ori,risk_no ,risk_flag , risk_name ,policy_dbgn  ,policy_dend ,\n prop_addr ,zip_code ,area_code ,useprop_code,useprop_name ,Flor_no ,const_class,limit_no,limit ,\n limit_rate ,limit_ori ,amt ,prem ,amt_flt ,prem_flt ,amt_fix ,prem_fix,amt_typ ,prem_typ,\n amt_ear ,prem_ear,mercno </script>")
    List<Rin1304FriPolicyDtlVOResp> queryPolicyDtlByPrimaryKey(@Param("policyNo")String policyNo,@Param("endorseNo") String endorseNo,@Param("addrNo") String addrNo);

    
    
    /**
     * Rin1304_臨分分入,用「保單號碼」和「地址序號」 查詢查詢該明細累積保額
     * @param policyNo
     * @param addrNo
     * @return
     */

//    @Select("<script>"
//    		+"select sum(amt) as sumamt from fri_policy_dtl \n"
//    		+"where policy_no=#{policyNo,jdbcType=VARCHAR} "
//    		+"AND addr_no=#{addrNo,jdbcType=VARCHAR} \n"
//    		+"</script>")
    @Select("<script> select sum(amt) as sumamt from fri_policy_dtl \n where policy_no=#{policyNo,jdbcType=VARCHAR} AND addr_no=#{addrNo,jdbcType=VARCHAR} \n </script>")
    List<Rin1304FriPolicyDtlVOResp> sumPolicyEndorseAmt(@Param("policyNo")String policyNo,@Param("addrNo") String addrNo);
    
    /**
     * Rin1304_臨分分入,用「保單號碼」和「批單號碼」和「地址序號」 查詢是否有保單地址序號
     * @param policyNo
     * @param endorseNo
     * @param addrNo
     * @return
     */

//    @Select("<script>"
//    		+"SELECT addr_no \n "
//    		+ "FROM fri_policy_dtl \n"
//    		+ "where policy_no=#{policyNo,jdbcType=VARCHAR} \n"
//    		+ "AND endorse_no=#{endorseNo,jdbcType=VARCHAR} \n"
//    		+ "AND addr_no_ori=#{addrNoOri,jdbcType=VARCHAR}"
//    		+"</script>")
    @Select("<script> SELECT addr_no \n FROM fri_policy_dtl \n where policy_no=#{policyNo,jdbcType=VARCHAR} \n AND endorse_no=#{endorseNo,jdbcType=VARCHAR} \n AND addr_no_ori=#{addrNoOri,jdbcType=VARCHAR} </script>")
    List<R1304QueryPolicyDtlVO> queryaddrNo(@Param("policyNo")String policyNo, @Param("endorseNo")String endorseNo, @Param("addrNoOri")String addrNoOri);

    
    /**
     * Rin1304_臨分分入, 保單地址序號有更改時，修改>輸入號碼的全部+1
     * @param policyNo
     * @param endorseNo
     * @param addrNoOri
     * @return
     */

//    @Update("<script>"
//    		+"update fri_policy_dtl "
//    		+"set addr_no_ori =addr_no_ori+1 "
//    		+"where policy_no=#{policyNo,jdbcType=VARCHAR} \n "
//    		+"AND endorse_no=#{endorseNo,jdbcType=VARCHAR} \n "
//    		+ "AND addr_no_ori > #{addrNoOri,jdbcType=VARCHAR}"
//    		+"</script>")
    @Update("<script> update fri_policy_dtl set addr_no_ori =addr_no_ori+1 where policy_no=#{policyNo,jdbcType=VARCHAR} \n AND endorse_no=#{endorseNo,jdbcType=VARCHAR} \n AND addr_no_ori > #{addrNoOri,jdbcType=VARCHAR} </script>")
	int updateAddrNoOriPlusOne(@Param("policyNo")String policyNo, @Param("endorseNo")String endorseNo, @Param("addrNoOri")String addrNoOri);

    
    /**
     * Rin1304_臨分分入,將保單地址序號全部重新排序
     * @param policyNo
     * @param endorseNo
     * @return
     */

//    @Update("<script>"
//    		+"UPDATE fri_policy_dtl \n"
//    		+"SET fri_policy_dtl.addr_no_ori = fri_policy_dtl.RN \n"
//    		+"FROM ( \n"
//    		+"SELECT \n"
//    		+"policy_no,endorse_no,addr_no_ori, \n"
//    		+"ROW_NUMBER() OVER (ORDER BY [addr_no_ori] ) AS RN \n"
//    		+"FROM fri_policy_dtl where policy_no=#{policyNo,jdbcType=VARCHAR} AND endorse_no=#{endorseNo,jdbcType=VARCHAR} \n"
//    		+") fri_policy_dtl \n"
//    		+" where policy_no=#{policyNo,jdbcType=VARCHAR} AND endorse_no=#{endorseNo,jdbcType=VARCHAR} \n"
//    		+"</script>")
    @Update("<script> UPDATE fri_policy_dtl \n SET fri_policy_dtl.addr_no_ori = fri_policy_dtl.RN \n FROM ( \n SELECT \n policy_no,endorse_no,addr_no_ori, \n ROW_NUMBER() OVER (ORDER BY [addr_no_ori] ) AS RN \n FROM fri_policy_dtl where policy_no=#{policyNo,jdbcType=VARCHAR} AND endorse_no=#{endorseNo,jdbcType=VARCHAR} \n ) fri_policy_dtl \n where policy_no=#{policyNo,jdbcType=VARCHAR} AND endorse_no=#{endorseNo,jdbcType=VARCHAR} \n </script>")
	int updateAddrNoOriAll(@Param("policyNo")String policyNo, @Param("endorseNo")String endorseNo);

    
	/**
	 * Rin1304_臨分分入_新增保批單明細檔 by 續保單號
	 * @param policyNo
	 * @param endorseNo
	 * @param getPolicyNo
	 * @return
	 */
	@Insert({ "<script>"
    	,"Insert into  fri_policy_dtl "
    	,"(policy_no, endorse_no, addr_no, addr_no_ori, risk_no, amt, prem, prop_addr, zip_code, area_code, useprop_code, useprop_name, const_class, "
    	,"limit_no, limit, amt_flt, prem_flt, amt_fix, prem_fix, amt_typ, prem_typ, amt_ear, prem_ear, risk_flag, "
    	,"risk_name, limit_rate, limit_ori, flor_no, policy_dbgn, policy_dend, end_reason) "
    	,"select  DISTINCT #{policyNo,jdbcType=VARCHAR} as policy_no, #{endorseNo,jdbcType=VARCHAR} as endorse_no,  A.addr_no ,"
    	,"A.addr_no_ori, A.risk_no, A.amt, A.prem, A.prop_addr, A.zip_code, A.area_code, A.useprop_code, A.useprop_name, A.const_class, "
    	,"A.limit_no, A.limit, A.amt_flt, A.prem_flt, A.amt_fix, A.prem_fix, A.amt_typ, A.prem_typ, A.amt_ear, A.prem_ear, A.risk_flag, "
    	,"A.risk_name , A.limit_rate, A.limit_ori, A.flor_no, A.policy_dbgn, A.policy_dend, A.end_reason "
    	,"from fri_policy_dtl  A "
    	,"where A.policy_no = #{getPolicyNo,jdbcType=VARCHAR} and A.endorse_no = ''"
    	,"</script>"})
    int insertFriPolicyDtlForOldPolicy(@Param("policyNo") String policyNo,@Param("endorseNo") String endorseNo,@Param("getPolicyNo") String getPolicyNo);

	/**
	 * Rin1304_自動產生調整批單號
	 * @param policyNo
	 * @param endorseNo
	 * @param policyNoADJ
	 * @param endorseNoADJ
	 * @return
	 */
	@Insert({"<script>"
		,"Insert into  fri_policy_dtl "
		,"(policy_no, endorse_no, addr_no, addr_no_ori, risk_no, amt, prem, prop_addr, zip_code, area_code, useprop_code, useprop_name, const_class, "
		,"limit_no, limit, amt_flt, prem_flt, amt_fix, prem_fix, amt_typ, prem_typ, amt_ear, prem_ear, risk_flag, "
		,"risk_name, limit_rate, limit_ori, flor_no, policy_dbgn, policy_dend, end_reason) "
		,"select #{policyNoADJ,jdbcType=VARCHAR} as policy_no, #{endorseNoADJ,jdbcType=VARCHAR} as endorse_no, A.addr_no,"
		,"A.addr_no_ori, A.risk_no, A.amt*(-1), A.prem*(-1), A.prop_addr, A.zip_code, A.area_code, A.useprop_code, A.useprop_name, A.const_class, "
		,"A.limit_no, A.limit, A.amt_flt*(-1), A.prem_flt*(-1), A.amt_fix*(-1), A.prem_fix*(-1), A.amt_typ*(-1), A.prem_typ*(-1), A.amt_ear*(-1), A.prem_ear*(-1), A.risk_flag," 
		,"A.risk_name , A.limit_rate, A.limit_ori, A.flor_no, A.policy_dbgn, A.policy_dend, A.end_reason "
		,"from  fri_policy_dtl  A"
		,"where A.policy_no = #{policyNo,jdbcType=VARCHAR}  and A.endorse_no = #{endorseNo,jdbcType=VARCHAR}"
		,"</script>"})
	int createADJpolicyDtl(@Param("policyNo")String policyNo,@Param("endorseNo") String endorseNo,@Param("policyNoADJ") String policyNoADJ,@Param("endorseNoADJ")String endorseNoADJ);

	/**
	 * Rin1304_反算_更改保批當明細檔保額/保費
	 * @param policyDbgn
	 * @param policyDend
	 * @param policyNo
	 * @param endorseNo
	 * @return
	 */
	@Update({"<script>"
		,"update fri_policy_dtl Set policy_dbgn = #{policyDbgn,jdbcType=VARCHAR} , policy_dend =  #{policyDend,jdbcType=VARCHAR} "
		,"WHERE  policy_no = #{policyNo,jdbcType=VARCHAR} AND endorse_no =#{endorseNo,jdbcType=VARCHAR}"
		,"</script>"})
	int updatePolicyDates(@Param("policyDbgn")Date policyDbgn,@Param("policyDend") Date policyDend, @Param("policyNo")String policyNo, @Param("endorseNo")String endorseNo);

	/**
	 * Rin1304_保批單明細檔_查詢使用性質名稱
	 * @param usePropId
	 * @return
	 */
	@Select({"<script> select  use_prop_name as usePropName from fri_use_limit where use_prop_id=#{usePropId,jdbcType=VARCHAR} </script>"})
	List<Rin1304GetUsePropVO> getUseProp(@Param("usePropId")String usePropId);
	
	/**
	 * Rin1304臨分分入_反算_取得地址序號
	 * @param policyNo
	 * @param endorseNo
	 * @return
	 */
	@Select({"<script>select addr_no as addrNo from fri_policy_dtl where policy_no =#{policyNo,jdbcType=VARCHAR} and endorse_no = #{endorseNo,jdbcType=VARCHAR}</script>"})
    List<Rin1304GetAddrNoVO> getAddrNo(@Param("policyNo")String policyNo,@Param("endorseNo") String endorseNo);
	
	/**
	 * Rin1304_反算_更改保批當明細檔保額/保費
	 * @param policyNo
	 * @param endorseNo
	 * @param addrNo
	 * @param amtTyp
	 * @param premTyp
	 * @param amtEar
	 * @param premEar
	 * @return
	 */
	@Update({"<script>"
		 ,"Update fri_policy_dtl Set"
		 ,"amt_flt =IsNull((select sum(amt) from fri_policy_prop "
		 		                    ,"where policy_no =#{policyNo,jdbcType=VARCHAR}"
									,"and endorse_no =#{endorseNo,jdbcType=VARCHAR}"
									,"and addr_no = #{addrNo,jdbcType=VARCHAR} and float_flag = 'Y'),0),"
		 ,"prem_flt =IsNull((select sum(A.prem) from fri_policy_Addition A, fri_policy_prop B "
		 		                    ,"where A.policy_no = #{policyNo,jdbcType=VARCHAR}"
		                            ,"and A.endorse_no =#{endorseNo,jdbcType=VARCHAR}"
									,"and A.addr_no = #{addrNo,jdbcType=VARCHAR}"
									,"and A.policy_no = B.policy_no "											
									,"and A.endorse_no = B.endorse_no" 											
									,"and A.addr_no = B.addr_no "
									,"and A.prop_no = B.prop_no"
									,"and B.float_flag = 'Y' "
									,"and Not(A.addition_no ='2' or A.addition_no ='82'  or A.addition_no ='3' or A.addition_no ='83' )),0),"
		 ,"amt_fix =IsNull((select sum(amt) from fri_policy_prop "
		 		                    ,"where policy_no =#{policyNo,jdbcType=VARCHAR}"
								    ,"and endorse_no =#{endorseNo,jdbcType=VARCHAR}"
								    ,"and addr_no =#{addrNo,jdbcType=VARCHAR} and float_flag = 'N'),0),"
		 ,"prem_fix =IsNull((select sum(A.prem) from fri_policy_Addition A, fri_policy_prop B "
		 		                    ,"where A.policy_no =#{policyNo,jdbcType=VARCHAR}"
		                            ,"and A.endorse_no =#{endorseNo,jdbcType=VARCHAR}"
									,"and A.addr_no =#{addrNo,jdbcType=VARCHAR}"
									,"and A.policy_no = B.policy_no  "											
									,"and A.endorse_no = B.endorse_no "											
									,"and A.addr_no = B.addr_no " 
									,"and A.prop_no = B.prop_no "
									,"and B.float_flag = 'N' "	
									,"and Not(A.addition_no ='2' or A.addition_no ='82'  or A.addition_no ='3' or A.addition_no ='83' )),0),"
		 ,"amt = (select sum(amt) from fri_policy_prop "
		 		                    ,"where policy_no =#{policyNo,jdbcType=VARCHAR}"
								    ,"and endorse_no =#{endorseNo,jdbcType=VARCHAR}"
								    ,"and addr_no =#{addrNo,jdbcType=VARCHAR}),"
		 ,"prem =IsNull((select sum(prem) from fri_policy_Addition  "
		 		                    ,"where policy_no =#{policyNo,jdbcType=VARCHAR}"
		                            ,"and endorse_no = #{endorseNo,jdbcType=VARCHAR}"
									,"and addr_no = #{addrNo,jdbcType=VARCHAR}"
									,"and Not(addition_no ='2' or addition_no ='82'  or addition_no ='3' or addition_no ='83' )),0)," 												
						            ,"amt_typ = #{amtTyp,jdbcType=VARCHAR},"
									,"prem_typ =#{premTyp,jdbcType=VARCHAR},"								
									,"amt_ear = #{amtEar,jdbcType=VARCHAR}, "
									,"prem_ear = #{premEar,jdbcType=VARCHAR}"
									,"Where policy_no =#{policyNo,jdbcType=VARCHAR} "
									,"And endorse_no =#{endorseNo,jdbcType=VARCHAR} "
									,"And addr_no =#{addrNo,jdbcType=VARCHAR}"	
		,"</script>"})
	int updatePolicyDtlAmtPrem(@Param("policyNo")String policyNo,@Param("endorseNo") String endorseNo,@Param("addrNo") String addrNo,
			@Param("amtTyp") BigDecimal amtTyp,@Param("premTyp") BigDecimal premTyp,@Param("amtEar") BigDecimal amtEar,@Param("premEar") BigDecimal premEar);
	
	/**
	 * Rin1304臨分分入_保批單明細檔_查詢地址序號&保單地址序號最大值
	 * @param policyNo
	 * @return
	 */
	@Select({"<script>Select Max(addr_no_ori) as addrNoOri, Max(addr_no) as addrNo  from fri_policy_dtl where policy_no =#{policyNo,jdbcType=VARCHAR} and endorse_no =#{endorseNo,jdbcType=VARCHAR}  </script>"})
	List<FriPolicyDtl> qreryPolicyAddrNo(@Param("policyNo")String policyNo,@Param("endorseNo")String endorseNo);

		
	/**
	 * Rin1304_臨分分入_修改保批單明細地址序號
	 * @param record
	 * @param oldAddrNo
	 * @return
	 */
	@Update({"<script>"
		,"update fri_policy_dtl "
		,"set addr_no = #{record.addrNo,jdbcType=VARCHAR}, addr_no_ori = #{record.addrNoOri,jdbcType=VARCHAR}, "
		,"risk_no = #{record.riskNo,jdbcType=VARCHAR},amt = #{record.amt,jdbcType=VARCHAR}, prem = #{record.prem,jdbcType=VARCHAR}, "
		,"prop_addr = #{record.propAddr,jdbcType=VARCHAR}, zip_code = #{record.zipCode,jdbcType=VARCHAR}, area_code = #{record.areaCode,jdbcType=VARCHAR},"
		,"useprop_code = #{record.usepropCode,jdbcType=VARCHAR}, useprop_name = #{record.usepropName,jdbcType=VARCHAR},"
		,"const_class = #{record.constClass,jdbcType=VARCHAR}, limit_no = #{record.limitNo,jdbcType=VARCHAR}, "
		,"limit = #{record.limit,jdbcType=VARCHAR}, amt_flt = #{record.amtFlt,jdbcType=VARCHAR},"
		,"prem_flt = #{record.premFlt,jdbcType=VARCHAR}, amt_fix = #{record.amtFix,jdbcType=VARCHAR},"
		,"prem_fix = #{record.premFix,jdbcType=VARCHAR}, amt_typ = #{record.amtTyp,jdbcType=VARCHAR}, "
		,"prem_typ = #{record.premTyp,jdbcType=VARCHAR},amt_ear = #{record.amtEar,jdbcType=VARCHAR}, prem_ear = #{record.premEar,jdbcType=VARCHAR},"
		,"risk_flag = #{record.riskFlag,jdbcType=VARCHAR}, risk_name = #{record.riskName,jdbcType=VARCHAR}, limit_rate = #{record.limitRate,jdbcType=VARCHAR},"
		,"limit_ori = #{record.limitOri,jdbcType=VARCHAR}, flor_no = #{record.florNo,jdbcType=VARCHAR}, "
		,"policy_dbgn = #{record.policyDbgn,jdbcType=VARCHAR}, policy_dend = #{record.policyDend,jdbcType=VARCHAR},"
		,"end_reason = #{record.endReason,jdbcType=VARCHAR}, mercno = #{record.mercno,jdbcType=VARCHAR} "
		,"where policy_no = #{record.policyNo,jdbcType=VARCHAR} and endorse_no = #{record.endorseNo,jdbcType=VARCHAR} and addr_no = #{oldAddrNo,jdbcType=VARCHAR} "
		,"</script>"})
	int updateAddrNo(FriPolicyDtl record, String oldAddrNo);

}