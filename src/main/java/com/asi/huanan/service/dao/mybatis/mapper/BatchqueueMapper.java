package com.asi.huanan.service.dao.mybatis.mapper;

import com.asi.huanan.service.dao.mybatis.model.Batchqueue;
import com.asi.huanan.service.dao.mybatis.model.BatchqueueExample;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface BatchqueueMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table batchqueue
	 *
	 * @mbg.generated Mon Dec 06 15:20:23 CST 2021
	 */
	long countByExample(BatchqueueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table batchqueue
	 *
	 * @mbg.generated Mon Dec 06 15:20:23 CST 2021
	 */
	int deleteByExample(BatchqueueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table batchqueue
	 *
	 * @mbg.generated Mon Dec 06 15:20:23 CST 2021
	 */
	int insert(Batchqueue record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table batchqueue
	 *
	 * @mbg.generated Mon Dec 06 15:20:23 CST 2021
	 */
	int insertSelective(Batchqueue record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table batchqueue
	 *
	 * @mbg.generated Mon Dec 06 15:20:23 CST 2021
	 */
	List<Batchqueue> selectByExample(BatchqueueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table batchqueue
	 *
	 * @mbg.generated Mon Dec 06 15:20:23 CST 2021
	 */
	int updateByExampleSelective(@Param("record") Batchqueue record, @Param("example") BatchqueueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table batchqueue
	 *
	 * @mbg.generated Mon Dec 06 15:20:23 CST 2021
	 */
	int updateByExample(@Param("record") Batchqueue record, @Param("example") BatchqueueExample example);

	// 再保臨分到期通知列印_立即執行
	@Insert("<script> INSERT INTO batchqueue(taskid, batchid, submittime, starttime, processstatus, "
			+ " account, batchreprotaccesspath) " + " values(#{record.taskid,jdbcType=VARCHAR},'Rin1302P', "
			+ " #{record.submittime,jdbcType=TIMESTAMP}, #{record.starttime,jdbcType=TIMESTAMP},"
			+ " #{record.processstatus,jdbcType=TINYINT},#{record.account,jdbcType=VARCHAR},#{record.batchreprotaccesspath,jdbcType=VARCHAR}) "
			+ "</script>")

	int insertBatchFriFacQueue0(@Param("record") Batchqueue model);

	// 再保臨分到期通知列印_排程執行
	@Insert("<script> INSERT INTO batchqueue(taskid, batchid, submittime, processstatus, " + " account) "
			+ " values(#{record.taskid,jdbcType=VARCHAR},'Rin1302P', " + " #{record.submittime,jdbcType=TIMESTAMP}, "
			+ " #{record.processstatus,jdbcType=TINYINT},#{record.account,jdbcType=VARCHAR}) " + "</script>")

	int insertBatchFriFacQueue(@Param("record") Batchqueue model);

	// 產生taskid
	@Select("<script> select top 1 NEWID() as taskID from batchqueue </script>")
	String genTaskID();

	// selectSubmitTime
	@Select("<script> select SubmitTime from batchqueue where taskid = #{taskid,jdbcType=VARCHAR} </script>")
	Date selectSubmitTime(@Param("taskid") String taskid);

	// 批次作業監視器_強制中止
	@Update("<script> UPDATE batchqueue  SET endtime = #{date,jdbcType=TIMESTAMP}, processstatus = #{processstatus,jdbcType=TINYINT}  WHERE taskid = #{taskid,jdbcType=VARCHAR} </script>")
	int updateBatchqueueByTerminate(@Param("taskid") String taskid, @Param("date") Date date,
			@Param("processstatus") byte processstatus);

	// 批次作業監視器_開啟報表
	@Select("<script> SELECT batchreprotaccesspath from batchqueue WHERE taskid = #{taskid,jdbcType=VARCHAR} </script>")
	List<Batchqueue> queryBatchReprotAccessPath(@Param("taskid") String taskid);

}