package com.asi.mechanism.service.dao.mybatis.model;

import java.util.ArrayList;
import java.util.List;

public class CodeMasterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public CodeMasterExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUuidIsNull() {
            addCriterion("UUID is null");
            return (Criteria) this;
        }

        public Criteria andUuidIsNotNull() {
            addCriterion("UUID is not null");
            return (Criteria) this;
        }

        public Criteria andUuidEqualTo(Object value) {
            addCriterion("UUID =", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotEqualTo(Object value) {
            addCriterion("UUID <>", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThan(Object value) {
            addCriterion("UUID >", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThanOrEqualTo(Object value) {
            addCriterion("UUID >=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThan(Object value) {
            addCriterion("UUID <", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThanOrEqualTo(Object value) {
            addCriterion("UUID <=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidIn(List<Object> values) {
            addCriterion("UUID in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotIn(List<Object> values) {
            addCriterion("UUID not in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidBetween(Object value1, Object value2) {
            addCriterion("UUID between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotBetween(Object value1, Object value2) {
            addCriterion("UUID not between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(Object value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(Object value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(Object value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(Object value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(Object value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(Object value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<Object> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<Object> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(Object value1, Object value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(Object value1, Object value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDesIsNull() {
            addCriterion("DES is null");
            return (Criteria) this;
        }

        public Criteria andDesIsNotNull() {
            addCriterion("DES is not null");
            return (Criteria) this;
        }

        public Criteria andDesEqualTo(Object value) {
            addCriterion("DES =", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesNotEqualTo(Object value) {
            addCriterion("DES <>", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesGreaterThan(Object value) {
            addCriterion("DES >", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesGreaterThanOrEqualTo(Object value) {
            addCriterion("DES >=", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesLessThan(Object value) {
            addCriterion("DES <", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesLessThanOrEqualTo(Object value) {
            addCriterion("DES <=", value, "des");
            return (Criteria) this;
        }

        public Criteria andDesIn(List<Object> values) {
            addCriterion("DES in", values, "des");
            return (Criteria) this;
        }

        public Criteria andDesNotIn(List<Object> values) {
            addCriterion("DES not in", values, "des");
            return (Criteria) this;
        }

        public Criteria andDesBetween(Object value1, Object value2) {
            addCriterion("DES between", value1, value2, "des");
            return (Criteria) this;
        }

        public Criteria andDesNotBetween(Object value1, Object value2) {
            addCriterion("DES not between", value1, value2, "des");
            return (Criteria) this;
        }

        public Criteria andB1IsNull() {
            addCriterion("B1 is null");
            return (Criteria) this;
        }

        public Criteria andB1IsNotNull() {
            addCriterion("B1 is not null");
            return (Criteria) this;
        }

        public Criteria andB1EqualTo(Object value) {
            addCriterion("B1 =", value, "b1");
            return (Criteria) this;
        }

        public Criteria andB1NotEqualTo(Object value) {
            addCriterion("B1 <>", value, "b1");
            return (Criteria) this;
        }

        public Criteria andB1GreaterThan(Object value) {
            addCriterion("B1 >", value, "b1");
            return (Criteria) this;
        }

        public Criteria andB1GreaterThanOrEqualTo(Object value) {
            addCriterion("B1 >=", value, "b1");
            return (Criteria) this;
        }

        public Criteria andB1LessThan(Object value) {
            addCriterion("B1 <", value, "b1");
            return (Criteria) this;
        }

        public Criteria andB1LessThanOrEqualTo(Object value) {
            addCriterion("B1 <=", value, "b1");
            return (Criteria) this;
        }

        public Criteria andB1In(List<Object> values) {
            addCriterion("B1 in", values, "b1");
            return (Criteria) this;
        }

        public Criteria andB1NotIn(List<Object> values) {
            addCriterion("B1 not in", values, "b1");
            return (Criteria) this;
        }

        public Criteria andB1Between(Object value1, Object value2) {
            addCriterion("B1 between", value1, value2, "b1");
            return (Criteria) this;
        }

        public Criteria andB1NotBetween(Object value1, Object value2) {
            addCriterion("B1 not between", value1, value2, "b1");
            return (Criteria) this;
        }

        public Criteria andB2IsNull() {
            addCriterion("B2 is null");
            return (Criteria) this;
        }

        public Criteria andB2IsNotNull() {
            addCriterion("B2 is not null");
            return (Criteria) this;
        }

        public Criteria andB2EqualTo(Object value) {
            addCriterion("B2 =", value, "b2");
            return (Criteria) this;
        }

        public Criteria andB2NotEqualTo(Object value) {
            addCriterion("B2 <>", value, "b2");
            return (Criteria) this;
        }

        public Criteria andB2GreaterThan(Object value) {
            addCriterion("B2 >", value, "b2");
            return (Criteria) this;
        }

        public Criteria andB2GreaterThanOrEqualTo(Object value) {
            addCriterion("B2 >=", value, "b2");
            return (Criteria) this;
        }

        public Criteria andB2LessThan(Object value) {
            addCriterion("B2 <", value, "b2");
            return (Criteria) this;
        }

        public Criteria andB2LessThanOrEqualTo(Object value) {
            addCriterion("B2 <=", value, "b2");
            return (Criteria) this;
        }

        public Criteria andB2In(List<Object> values) {
            addCriterion("B2 in", values, "b2");
            return (Criteria) this;
        }

        public Criteria andB2NotIn(List<Object> values) {
            addCriterion("B2 not in", values, "b2");
            return (Criteria) this;
        }

        public Criteria andB2Between(Object value1, Object value2) {
            addCriterion("B2 between", value1, value2, "b2");
            return (Criteria) this;
        }

        public Criteria andB2NotBetween(Object value1, Object value2) {
            addCriterion("B2 not between", value1, value2, "b2");
            return (Criteria) this;
        }

        public Criteria andB3IsNull() {
            addCriterion("B3 is null");
            return (Criteria) this;
        }

        public Criteria andB3IsNotNull() {
            addCriterion("B3 is not null");
            return (Criteria) this;
        }

        public Criteria andB3EqualTo(Object value) {
            addCriterion("B3 =", value, "b3");
            return (Criteria) this;
        }

        public Criteria andB3NotEqualTo(Object value) {
            addCriterion("B3 <>", value, "b3");
            return (Criteria) this;
        }

        public Criteria andB3GreaterThan(Object value) {
            addCriterion("B3 >", value, "b3");
            return (Criteria) this;
        }

        public Criteria andB3GreaterThanOrEqualTo(Object value) {
            addCriterion("B3 >=", value, "b3");
            return (Criteria) this;
        }

        public Criteria andB3LessThan(Object value) {
            addCriterion("B3 <", value, "b3");
            return (Criteria) this;
        }

        public Criteria andB3LessThanOrEqualTo(Object value) {
            addCriterion("B3 <=", value, "b3");
            return (Criteria) this;
        }

        public Criteria andB3In(List<Object> values) {
            addCriterion("B3 in", values, "b3");
            return (Criteria) this;
        }

        public Criteria andB3NotIn(List<Object> values) {
            addCriterion("B3 not in", values, "b3");
            return (Criteria) this;
        }

        public Criteria andB3Between(Object value1, Object value2) {
            addCriterion("B3 between", value1, value2, "b3");
            return (Criteria) this;
        }

        public Criteria andB3NotBetween(Object value1, Object value2) {
            addCriterion("B3 not between", value1, value2, "b3");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CODE_MASTER
     *
     * @mbg.generated do_not_delete_during_merge Tue Dec 01 10:59:53 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CODE_MASTER
     *
     * @mbg.generated Tue Dec 01 10:59:53 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}