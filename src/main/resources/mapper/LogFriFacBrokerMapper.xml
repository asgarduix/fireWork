<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asi.huanan.service.dao.mybatis.mapper.LogFriFacBrokerMapper">
  <resultMap id="BaseResultMap" type="com.asi.huanan.service.dao.mybatis.model.LogFriFacBroker">
    <id column="slip_no" jdbcType="VARCHAR" property="slipNo" />
    <id column="LOG_seq" jdbcType="VARCHAR" property="logSeq" />
    <id column="broker_id" jdbcType="VARCHAR" property="brokerId" />
    <id column="rin_com_id" jdbcType="VARCHAR" property="rinComId" />
    <id column="fac_type" jdbcType="VARCHAR" property="facType" />
    <result column="share_rate" jdbcType="DECIMAL" property="shareRate" />
    <result column="rin_com_id_OLD" jdbcType="VARCHAR" property="rinComIdOld" />
    <result column="broker_id_OLD" jdbcType="VARCHAR" property="brokerIdOld" />
    <result column="brkcomm" jdbcType="DECIMAL" property="brkcomm" />
    <result column="brktax" jdbcType="DECIMAL" property="brktax" />
    <result column="brkprem" jdbcType="DECIMAL" property="brkprem" />
    <result column="brktype" jdbcType="VARCHAR" property="brktype" />
    <result column="comm_rate" jdbcType="DECIMAL" property="commRate" />
    <result column="tax_rate" jdbcType="DECIMAL" property="taxRate" />
    <result column="cede_amt" jdbcType="DECIMAL" property="cedeAmt" />
    <result column="excess_bgn" jdbcType="DECIMAL" property="excessBgn" />
    <result column="excess_limit" jdbcType="DECIMAL" property="excessLimit" />
    <result column="brkprem100" jdbcType="DECIMAL" property="brkprem100" />
    <result column="brkcomm_rate" jdbcType="DECIMAL" property="brkcommRate" />
    <result column="brktax_rate" jdbcType="DECIMAL" property="brktaxRate" />
    <result column="brkexcess_bgn" jdbcType="DECIMAL" property="brkexcessBgn" />
    <result column="brkexcess_limit" jdbcType="DECIMAL" property="brkexcessLimit" />
    <result column="brkRIprem_NT" jdbcType="DECIMAL" property="brkripremNt" />
    <result column="brkRIcomm_NT" jdbcType="DECIMAL" property="brkricommNt" />
    <result column="brkRIprem_ORG" jdbcType="DECIMAL" property="brkripremOrg" />
    <result column="brkRIcomm_ORG" jdbcType="DECIMAL" property="brkricommOrg" />
    <result column="brkRItax_NT" jdbcType="DECIMAL" property="brkritaxNt" />
    <result column="brkRItax_ORG" jdbcType="DECIMAL" property="brkritaxOrg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    slip_no, LOG_seq, broker_id, rin_com_id, fac_type, share_rate, rin_com_id_OLD, broker_id_OLD, 
    brkcomm, brktax, brkprem, brktype, comm_rate, tax_rate, cede_amt, excess_bgn, excess_limit, 
    brkprem100, brkcomm_rate, brktax_rate, brkexcess_bgn, brkexcess_limit, brkRIprem_NT, 
    brkRIcomm_NT, brkRIprem_ORG, brkRIcomm_ORG, brkRItax_NT, brkRItax_ORG
  </sql>
  <select id="selectByExample" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBrokerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from LOG_fri_fac_broker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBrokerKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LOG_fri_fac_broker
    where slip_no = #{slipNo,jdbcType=VARCHAR}
      and LOG_seq = #{logSeq,jdbcType=VARCHAR}
      and broker_id = #{brokerId,jdbcType=VARCHAR}
      and rin_com_id = #{rinComId,jdbcType=VARCHAR}
      and fac_type = #{facType,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBrokerKey">
    delete from LOG_fri_fac_broker
    where slip_no = #{slipNo,jdbcType=VARCHAR}
      and LOG_seq = #{logSeq,jdbcType=VARCHAR}
      and broker_id = #{brokerId,jdbcType=VARCHAR}
      and rin_com_id = #{rinComId,jdbcType=VARCHAR}
      and fac_type = #{facType,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBrokerExample">
    delete from LOG_fri_fac_broker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBroker">
    insert into LOG_fri_fac_broker (slip_no, LOG_seq, broker_id, 
      rin_com_id, fac_type, share_rate, 
      rin_com_id_OLD, broker_id_OLD, brkcomm, 
      brktax, brkprem, brktype, 
      comm_rate, tax_rate, cede_amt, 
      excess_bgn, excess_limit, brkprem100, 
      brkcomm_rate, brktax_rate, brkexcess_bgn, 
      brkexcess_limit, brkRIprem_NT, brkRIcomm_NT, 
      brkRIprem_ORG, brkRIcomm_ORG, brkRItax_NT, 
      brkRItax_ORG)
    values (#{slipNo,jdbcType=VARCHAR}, #{logSeq,jdbcType=VARCHAR}, #{brokerId,jdbcType=VARCHAR}, 
      #{rinComId,jdbcType=VARCHAR}, #{facType,jdbcType=VARCHAR}, #{shareRate,jdbcType=DECIMAL}, 
      #{rinComIdOld,jdbcType=VARCHAR}, #{brokerIdOld,jdbcType=VARCHAR}, #{brkcomm,jdbcType=DECIMAL}, 
      #{brktax,jdbcType=DECIMAL}, #{brkprem,jdbcType=DECIMAL}, #{brktype,jdbcType=VARCHAR}, 
      #{commRate,jdbcType=DECIMAL}, #{taxRate,jdbcType=DECIMAL}, #{cedeAmt,jdbcType=DECIMAL}, 
      #{excessBgn,jdbcType=DECIMAL}, #{excessLimit,jdbcType=DECIMAL}, #{brkprem100,jdbcType=DECIMAL}, 
      #{brkcommRate,jdbcType=DECIMAL}, #{brktaxRate,jdbcType=DECIMAL}, #{brkexcessBgn,jdbcType=DECIMAL}, 
      #{brkexcessLimit,jdbcType=DECIMAL}, #{brkripremNt,jdbcType=DECIMAL}, #{brkricommNt,jdbcType=DECIMAL}, 
      #{brkripremOrg,jdbcType=DECIMAL}, #{brkricommOrg,jdbcType=DECIMAL}, #{brkritaxNt,jdbcType=DECIMAL}, 
      #{brkritaxOrg,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBroker">
    insert into LOG_fri_fac_broker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="slipNo != null">
        slip_no,
      </if>
      <if test="logSeq != null">
        LOG_seq,
      </if>
      <if test="brokerId != null">
        broker_id,
      </if>
      <if test="rinComId != null">
        rin_com_id,
      </if>
      <if test="facType != null">
        fac_type,
      </if>
      <if test="shareRate != null">
        share_rate,
      </if>
      <if test="rinComIdOld != null">
        rin_com_id_OLD,
      </if>
      <if test="brokerIdOld != null">
        broker_id_OLD,
      </if>
      <if test="brkcomm != null">
        brkcomm,
      </if>
      <if test="brktax != null">
        brktax,
      </if>
      <if test="brkprem != null">
        brkprem,
      </if>
      <if test="brktype != null">
        brktype,
      </if>
      <if test="commRate != null">
        comm_rate,
      </if>
      <if test="taxRate != null">
        tax_rate,
      </if>
      <if test="cedeAmt != null">
        cede_amt,
      </if>
      <if test="excessBgn != null">
        excess_bgn,
      </if>
      <if test="excessLimit != null">
        excess_limit,
      </if>
      <if test="brkprem100 != null">
        brkprem100,
      </if>
      <if test="brkcommRate != null">
        brkcomm_rate,
      </if>
      <if test="brktaxRate != null">
        brktax_rate,
      </if>
      <if test="brkexcessBgn != null">
        brkexcess_bgn,
      </if>
      <if test="brkexcessLimit != null">
        brkexcess_limit,
      </if>
      <if test="brkripremNt != null">
        brkRIprem_NT,
      </if>
      <if test="brkricommNt != null">
        brkRIcomm_NT,
      </if>
      <if test="brkripremOrg != null">
        brkRIprem_ORG,
      </if>
      <if test="brkricommOrg != null">
        brkRIcomm_ORG,
      </if>
      <if test="brkritaxNt != null">
        brkRItax_NT,
      </if>
      <if test="brkritaxOrg != null">
        brkRItax_ORG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="slipNo != null">
        #{slipNo,jdbcType=VARCHAR},
      </if>
      <if test="logSeq != null">
        #{logSeq,jdbcType=VARCHAR},
      </if>
      <if test="brokerId != null">
        #{brokerId,jdbcType=VARCHAR},
      </if>
      <if test="rinComId != null">
        #{rinComId,jdbcType=VARCHAR},
      </if>
      <if test="facType != null">
        #{facType,jdbcType=VARCHAR},
      </if>
      <if test="shareRate != null">
        #{shareRate,jdbcType=DECIMAL},
      </if>
      <if test="rinComIdOld != null">
        #{rinComIdOld,jdbcType=VARCHAR},
      </if>
      <if test="brokerIdOld != null">
        #{brokerIdOld,jdbcType=VARCHAR},
      </if>
      <if test="brkcomm != null">
        #{brkcomm,jdbcType=DECIMAL},
      </if>
      <if test="brktax != null">
        #{brktax,jdbcType=DECIMAL},
      </if>
      <if test="brkprem != null">
        #{brkprem,jdbcType=DECIMAL},
      </if>
      <if test="brktype != null">
        #{brktype,jdbcType=VARCHAR},
      </if>
      <if test="commRate != null">
        #{commRate,jdbcType=DECIMAL},
      </if>
      <if test="taxRate != null">
        #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="cedeAmt != null">
        #{cedeAmt,jdbcType=DECIMAL},
      </if>
      <if test="excessBgn != null">
        #{excessBgn,jdbcType=DECIMAL},
      </if>
      <if test="excessLimit != null">
        #{excessLimit,jdbcType=DECIMAL},
      </if>
      <if test="brkprem100 != null">
        #{brkprem100,jdbcType=DECIMAL},
      </if>
      <if test="brkcommRate != null">
        #{brkcommRate,jdbcType=DECIMAL},
      </if>
      <if test="brktaxRate != null">
        #{brktaxRate,jdbcType=DECIMAL},
      </if>
      <if test="brkexcessBgn != null">
        #{brkexcessBgn,jdbcType=DECIMAL},
      </if>
      <if test="brkexcessLimit != null">
        #{brkexcessLimit,jdbcType=DECIMAL},
      </if>
      <if test="brkripremNt != null">
        #{brkripremNt,jdbcType=DECIMAL},
      </if>
      <if test="brkricommNt != null">
        #{brkricommNt,jdbcType=DECIMAL},
      </if>
      <if test="brkripremOrg != null">
        #{brkripremOrg,jdbcType=DECIMAL},
      </if>
      <if test="brkricommOrg != null">
        #{brkricommOrg,jdbcType=DECIMAL},
      </if>
      <if test="brkritaxNt != null">
        #{brkritaxNt,jdbcType=DECIMAL},
      </if>
      <if test="brkritaxOrg != null">
        #{brkritaxOrg,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBrokerExample" resultType="java.lang.Long">
    select count(*) from LOG_fri_fac_broker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update LOG_fri_fac_broker
    <set>
      <if test="record.slipNo != null">
        slip_no = #{record.slipNo,jdbcType=VARCHAR},
      </if>
      <if test="record.logSeq != null">
        LOG_seq = #{record.logSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerId != null">
        broker_id = #{record.brokerId,jdbcType=VARCHAR},
      </if>
      <if test="record.rinComId != null">
        rin_com_id = #{record.rinComId,jdbcType=VARCHAR},
      </if>
      <if test="record.facType != null">
        fac_type = #{record.facType,jdbcType=VARCHAR},
      </if>
      <if test="record.shareRate != null">
        share_rate = #{record.shareRate,jdbcType=DECIMAL},
      </if>
      <if test="record.rinComIdOld != null">
        rin_com_id_OLD = #{record.rinComIdOld,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerIdOld != null">
        broker_id_OLD = #{record.brokerIdOld,jdbcType=VARCHAR},
      </if>
      <if test="record.brkcomm != null">
        brkcomm = #{record.brkcomm,jdbcType=DECIMAL},
      </if>
      <if test="record.brktax != null">
        brktax = #{record.brktax,jdbcType=DECIMAL},
      </if>
      <if test="record.brkprem != null">
        brkprem = #{record.brkprem,jdbcType=DECIMAL},
      </if>
      <if test="record.brktype != null">
        brktype = #{record.brktype,jdbcType=VARCHAR},
      </if>
      <if test="record.commRate != null">
        comm_rate = #{record.commRate,jdbcType=DECIMAL},
      </if>
      <if test="record.taxRate != null">
        tax_rate = #{record.taxRate,jdbcType=DECIMAL},
      </if>
      <if test="record.cedeAmt != null">
        cede_amt = #{record.cedeAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.excessBgn != null">
        excess_bgn = #{record.excessBgn,jdbcType=DECIMAL},
      </if>
      <if test="record.excessLimit != null">
        excess_limit = #{record.excessLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.brkprem100 != null">
        brkprem100 = #{record.brkprem100,jdbcType=DECIMAL},
      </if>
      <if test="record.brkcommRate != null">
        brkcomm_rate = #{record.brkcommRate,jdbcType=DECIMAL},
      </if>
      <if test="record.brktaxRate != null">
        brktax_rate = #{record.brktaxRate,jdbcType=DECIMAL},
      </if>
      <if test="record.brkexcessBgn != null">
        brkexcess_bgn = #{record.brkexcessBgn,jdbcType=DECIMAL},
      </if>
      <if test="record.brkexcessLimit != null">
        brkexcess_limit = #{record.brkexcessLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.brkripremNt != null">
        brkRIprem_NT = #{record.brkripremNt,jdbcType=DECIMAL},
      </if>
      <if test="record.brkricommNt != null">
        brkRIcomm_NT = #{record.brkricommNt,jdbcType=DECIMAL},
      </if>
      <if test="record.brkripremOrg != null">
        brkRIprem_ORG = #{record.brkripremOrg,jdbcType=DECIMAL},
      </if>
      <if test="record.brkricommOrg != null">
        brkRIcomm_ORG = #{record.brkricommOrg,jdbcType=DECIMAL},
      </if>
      <if test="record.brkritaxNt != null">
        brkRItax_NT = #{record.brkritaxNt,jdbcType=DECIMAL},
      </if>
      <if test="record.brkritaxOrg != null">
        brkRItax_ORG = #{record.brkritaxOrg,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update LOG_fri_fac_broker
    set slip_no = #{record.slipNo,jdbcType=VARCHAR},
      LOG_seq = #{record.logSeq,jdbcType=VARCHAR},
      broker_id = #{record.brokerId,jdbcType=VARCHAR},
      rin_com_id = #{record.rinComId,jdbcType=VARCHAR},
      fac_type = #{record.facType,jdbcType=VARCHAR},
      share_rate = #{record.shareRate,jdbcType=DECIMAL},
      rin_com_id_OLD = #{record.rinComIdOld,jdbcType=VARCHAR},
      broker_id_OLD = #{record.brokerIdOld,jdbcType=VARCHAR},
      brkcomm = #{record.brkcomm,jdbcType=DECIMAL},
      brktax = #{record.brktax,jdbcType=DECIMAL},
      brkprem = #{record.brkprem,jdbcType=DECIMAL},
      brktype = #{record.brktype,jdbcType=VARCHAR},
      comm_rate = #{record.commRate,jdbcType=DECIMAL},
      tax_rate = #{record.taxRate,jdbcType=DECIMAL},
      cede_amt = #{record.cedeAmt,jdbcType=DECIMAL},
      excess_bgn = #{record.excessBgn,jdbcType=DECIMAL},
      excess_limit = #{record.excessLimit,jdbcType=DECIMAL},
      brkprem100 = #{record.brkprem100,jdbcType=DECIMAL},
      brkcomm_rate = #{record.brkcommRate,jdbcType=DECIMAL},
      brktax_rate = #{record.brktaxRate,jdbcType=DECIMAL},
      brkexcess_bgn = #{record.brkexcessBgn,jdbcType=DECIMAL},
      brkexcess_limit = #{record.brkexcessLimit,jdbcType=DECIMAL},
      brkRIprem_NT = #{record.brkripremNt,jdbcType=DECIMAL},
      brkRIcomm_NT = #{record.brkricommNt,jdbcType=DECIMAL},
      brkRIprem_ORG = #{record.brkripremOrg,jdbcType=DECIMAL},
      brkRIcomm_ORG = #{record.brkricommOrg,jdbcType=DECIMAL},
      brkRItax_NT = #{record.brkritaxNt,jdbcType=DECIMAL},
      brkRItax_ORG = #{record.brkritaxOrg,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBroker">
    update LOG_fri_fac_broker
    <set>
      <if test="shareRate != null">
        share_rate = #{shareRate,jdbcType=DECIMAL},
      </if>
      <if test="rinComIdOld != null">
        rin_com_id_OLD = #{rinComIdOld,jdbcType=VARCHAR},
      </if>
      <if test="brokerIdOld != null">
        broker_id_OLD = #{brokerIdOld,jdbcType=VARCHAR},
      </if>
      <if test="brkcomm != null">
        brkcomm = #{brkcomm,jdbcType=DECIMAL},
      </if>
      <if test="brktax != null">
        brktax = #{brktax,jdbcType=DECIMAL},
      </if>
      <if test="brkprem != null">
        brkprem = #{brkprem,jdbcType=DECIMAL},
      </if>
      <if test="brktype != null">
        brktype = #{brktype,jdbcType=VARCHAR},
      </if>
      <if test="commRate != null">
        comm_rate = #{commRate,jdbcType=DECIMAL},
      </if>
      <if test="taxRate != null">
        tax_rate = #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="cedeAmt != null">
        cede_amt = #{cedeAmt,jdbcType=DECIMAL},
      </if>
      <if test="excessBgn != null">
        excess_bgn = #{excessBgn,jdbcType=DECIMAL},
      </if>
      <if test="excessLimit != null">
        excess_limit = #{excessLimit,jdbcType=DECIMAL},
      </if>
      <if test="brkprem100 != null">
        brkprem100 = #{brkprem100,jdbcType=DECIMAL},
      </if>
      <if test="brkcommRate != null">
        brkcomm_rate = #{brkcommRate,jdbcType=DECIMAL},
      </if>
      <if test="brktaxRate != null">
        brktax_rate = #{brktaxRate,jdbcType=DECIMAL},
      </if>
      <if test="brkexcessBgn != null">
        brkexcess_bgn = #{brkexcessBgn,jdbcType=DECIMAL},
      </if>
      <if test="brkexcessLimit != null">
        brkexcess_limit = #{brkexcessLimit,jdbcType=DECIMAL},
      </if>
      <if test="brkripremNt != null">
        brkRIprem_NT = #{brkripremNt,jdbcType=DECIMAL},
      </if>
      <if test="brkricommNt != null">
        brkRIcomm_NT = #{brkricommNt,jdbcType=DECIMAL},
      </if>
      <if test="brkripremOrg != null">
        brkRIprem_ORG = #{brkripremOrg,jdbcType=DECIMAL},
      </if>
      <if test="brkricommOrg != null">
        brkRIcomm_ORG = #{brkricommOrg,jdbcType=DECIMAL},
      </if>
      <if test="brkritaxNt != null">
        brkRItax_NT = #{brkritaxNt,jdbcType=DECIMAL},
      </if>
      <if test="brkritaxOrg != null">
        brkRItax_ORG = #{brkritaxOrg,jdbcType=DECIMAL},
      </if>
    </set>
    where slip_no = #{slipNo,jdbcType=VARCHAR}
      and LOG_seq = #{logSeq,jdbcType=VARCHAR}
      and broker_id = #{brokerId,jdbcType=VARCHAR}
      and rin_com_id = #{rinComId,jdbcType=VARCHAR}
      and fac_type = #{facType,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.asi.huanan.service.dao.mybatis.model.LogFriFacBroker">
    update LOG_fri_fac_broker
    set share_rate = #{shareRate,jdbcType=DECIMAL},
      rin_com_id_OLD = #{rinComIdOld,jdbcType=VARCHAR},
      broker_id_OLD = #{brokerIdOld,jdbcType=VARCHAR},
      brkcomm = #{brkcomm,jdbcType=DECIMAL},
      brktax = #{brktax,jdbcType=DECIMAL},
      brkprem = #{brkprem,jdbcType=DECIMAL},
      brktype = #{brktype,jdbcType=VARCHAR},
      comm_rate = #{commRate,jdbcType=DECIMAL},
      tax_rate = #{taxRate,jdbcType=DECIMAL},
      cede_amt = #{cedeAmt,jdbcType=DECIMAL},
      excess_bgn = #{excessBgn,jdbcType=DECIMAL},
      excess_limit = #{excessLimit,jdbcType=DECIMAL},
      brkprem100 = #{brkprem100,jdbcType=DECIMAL},
      brkcomm_rate = #{brkcommRate,jdbcType=DECIMAL},
      brktax_rate = #{brktaxRate,jdbcType=DECIMAL},
      brkexcess_bgn = #{brkexcessBgn,jdbcType=DECIMAL},
      brkexcess_limit = #{brkexcessLimit,jdbcType=DECIMAL},
      brkRIprem_NT = #{brkripremNt,jdbcType=DECIMAL},
      brkRIcomm_NT = #{brkricommNt,jdbcType=DECIMAL},
      brkRIprem_ORG = #{brkripremOrg,jdbcType=DECIMAL},
      brkRIcomm_ORG = #{brkricommOrg,jdbcType=DECIMAL},
      brkRItax_NT = #{brkritaxNt,jdbcType=DECIMAL},
      brkRItax_ORG = #{brkritaxOrg,jdbcType=DECIMAL}
    where slip_no = #{slipNo,jdbcType=VARCHAR}
      and LOG_seq = #{logSeq,jdbcType=VARCHAR}
      and broker_id = #{brokerId,jdbcType=VARCHAR}
      and rin_com_id = #{rinComId,jdbcType=VARCHAR}
      and fac_type = #{facType,jdbcType=VARCHAR}
  </update>
</mapper>